Return-Path: <linux-erofs-bounces+lists+linux-erofs=lfdr.de@lists.ozlabs.org>
X-Original-To: lists+linux-erofs@lfdr.de
Delivered-To: lists+linux-erofs@lfdr.de
Received: from lists.ozlabs.org (lists.ozlabs.org [112.213.38.117])
	by mail.lfdr.de (Postfix) with ESMTPS id 27D614704F8
	for <lists+linux-erofs@lfdr.de>; Fri, 10 Dec 2021 16:53:34 +0100 (CET)
Received: from boromir.ozlabs.org (localhost [IPv6:::1])
	by lists.ozlabs.org (Postfix) with ESMTP id 4J9b6N0qKtz3c73
	for <lists+linux-erofs@lfdr.de>; Sat, 11 Dec 2021 02:53:32 +1100 (AEDT)
Authentication-Results: lists.ozlabs.org;
	dkim=fail reason="signature verification failed" (2048-bit key; unprotected) header.d=gmail.com header.i=@gmail.com header.a=rsa-sha256 header.s=20210112 header.b=BTbKUJAS;
	dkim-atps=neutral
X-Original-To: linux-erofs@lists.ozlabs.org
Delivered-To: linux-erofs@lists.ozlabs.org
Authentication-Results: lists.ozlabs.org; spf=pass (sender SPF authorized)
 smtp.mailfrom=gmail.com (client-ip=2607:f8b0:4864:20::d31;
 helo=mail-io1-xd31.google.com; envelope-from=igoreisberg@gmail.com;
 receiver=<UNKNOWN>)
Authentication-Results: lists.ozlabs.org; dkim=pass (2048-bit key;
 unprotected) header.d=gmail.com header.i=@gmail.com header.a=rsa-sha256
 header.s=20210112 header.b=BTbKUJAS; dkim-atps=neutral
Received: from mail-io1-xd31.google.com (mail-io1-xd31.google.com
 [IPv6:2607:f8b0:4864:20::d31])
 (using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits)
 key-exchange X25519 server-signature RSA-PSS (2048 bits) server-digest SHA256)
 (No client certificate requested)
 by lists.ozlabs.org (Postfix) with ESMTPS id 4J9b6K0h4Vz3089
 for <linux-erofs@lists.ozlabs.org>; Sat, 11 Dec 2021 02:53:28 +1100 (AEDT)
Received: by mail-io1-xd31.google.com with SMTP id x10so10853406ioj.9
 for <linux-erofs@lists.ozlabs.org>; Fri, 10 Dec 2021 07:53:28 -0800 (PST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=gmail.com; s=20210112;
 h=mime-version:from:date:message-id:subject:to;
 bh=ax0ZywJY6E5HDkyejpNpC3nCpRWkJ6mJXZqAy5eTO4c=;
 b=BTbKUJASjNBL+t8hB8itB1S2TI/ZTQ5T17PiLsof8Yurhc6pLoi3sT7we5kdtr8W7K
 OrQVAu/EBu+c/iaj7/pUvVeKbOzAAGD/P+wDxOnLiesilhhorSQE+VSalcwfZ0pDIV7r
 sVV+nJzwhmINM+jf+uuPMgOhEmlCs2h283DtjsTMVZ1IDQulzyyhdEuHeaBmU+ga89Up
 N/1A2zMYu3EotM2BzLW+GKyqyE1oUu7MJ1O9/XJLBst96gBamkTXEq8V4ENq25vSN7+4
 FZuA7ZsR+81ZAdYK0sBEG1CalAEn20+bpRI+ObUkjjZWk5JqiMvJW4nQAFot2gcuxs8w
 7h8g==
X-Google-DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
 d=1e100.net; s=20210112;
 h=x-gm-message-state:mime-version:from:date:message-id:subject:to;
 bh=ax0ZywJY6E5HDkyejpNpC3nCpRWkJ6mJXZqAy5eTO4c=;
 b=4cHmGmvuVxe9zz0yaiKPzaZQ6hBcPMjOY8Q/5RhAKxAXkucZ0RmnE9mdYbANDBPBik
 Wspc1CfotQke6YbDVd7bAI5IcFizh1X0zBHyRtQoYXk1MUJtlubVCXH8k+poFYXYK4Ff
 +vGoBxGCLRsuqLmIqVR+le2GZajUB5IsZhFzghdLU4lE4Cjxu75g+gwgutIrv5ZUe0yu
 FKn+LKKrwqjB3IujPyMBtcMYRj9Aor64t1Qr7qq/afFMn+ovIf48HqtBKSP69tedT74l
 8NtZqu4PDbuze+a+9XZkC4XG2dbnract7NQFBTBmAA8aP/7Piq+PfebYQkSYyqpkwTOs
 wSLw==
X-Gm-Message-State: AOAM530D1v0H+S3Me5KDrHDujJ94M42abZfKqyKtRVlOShxcjFeLAgZT
 fWZVgQv0Tp5lNHbGBLeGV4woQIjT3aGkLg70rOd+mKci
X-Google-Smtp-Source: ABdhPJxSkp/6Epmyls3qJ0HF4ko9VSUKUNWQhF4unvHud23r2fivgRJqJjlGhSoHgtSXzSJOnW00CyFbHoSw0EV06HM=
X-Received: by 2002:a05:6638:2bb:: with SMTP id
 d27mr20085391jaq.66.1639151603319; 
 Fri, 10 Dec 2021 07:53:23 -0800 (PST)
MIME-Version: 1.0
From: Igor Eisberg <igoreisberg@gmail.com>
Date: Fri, 10 Dec 2021 17:53:13 +0200
Message-ID: <CABjEcnHHFe-1YbWjcpMXXuM8Dd1a+tgWTbATP5hOhQ_+PDBZMw@mail.gmail.com>
Subject: erofs-utils: fsck support for --extract=X to extract to path X
To: linux-erofs@lists.ozlabs.org
Content-Type: multipart/mixed; boundary="0000000000000cd22505d2ccb981"
X-BeenThere: linux-erofs@lists.ozlabs.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Development of Linux EROFS file system <linux-erofs.lists.ozlabs.org>
List-Unsubscribe: <https://lists.ozlabs.org/options/linux-erofs>,
 <mailto:linux-erofs-request@lists.ozlabs.org?subject=unsubscribe>
List-Archive: <http://lists.ozlabs.org/pipermail/linux-erofs/>
List-Post: <mailto:linux-erofs@lists.ozlabs.org>
List-Help: <mailto:linux-erofs-request@lists.ozlabs.org?subject=help>
List-Subscribe: <https://lists.ozlabs.org/listinfo/linux-erofs>,
 <mailto:linux-erofs-request@lists.ozlabs.org?subject=subscribe>
Errors-To: linux-erofs-bounces+lists+linux-erofs=lfdr.de@lists.ozlabs.org
Sender: "Linux-erofs"
 <linux-erofs-bounces+lists+linux-erofs=lfdr.de@lists.ozlabs.org>

--0000000000000cd22505d2ccb981
Content-Type: multipart/alternative; boundary="0000000000000cd22305d2ccb97f"

--0000000000000cd22305d2ccb97f
Content-Type: text/plain; charset="UTF-8"



--0000000000000cd22305d2ccb97f
Content-Type: text/html; charset="UTF-8"

<div dir="ltr"><br></div>

--0000000000000cd22305d2ccb97f--

--0000000000000cd22505d2ccb981
Content-Type: application/octet-stream; 
	name="0001-erofs-utils-fsck-support-for-extract-X-to-extract-to.patch"
Content-Disposition: attachment; 
	filename="0001-erofs-utils-fsck-support-for-extract-X-to-extract-to.patch"
Content-Transfer-Encoding: base64
Content-ID: <f_kx0kj2630>
X-Attachment-Id: f_kx0kj2630

RnJvbSAwYzM5MDUwMTJhMjIyODMxZDBiMTRhZWUxZmRhODIzNzcyYzFkNWIxIE1vbiBTZXAgMTcg
MDA6MDA6MDAgMjAwMQpGcm9tOiBJZ29yIE9zdGFwZW5rbyA8aWdvcmVpc2JlcmdAZ21haWwuY29t
PgpEYXRlOiBGcmksIDEwIERlYyAyMDIxIDE0OjM3OjQ0ICswMjAwClN1YmplY3Q6IGVyb2ZzLXV0
aWxzOiBmc2NrIHN1cHBvcnQgZm9yIC0tZXh0cmFjdD1YIHRvIGV4dHJhY3QgdG8gcGF0aCBYCgpF
eHRyYWN0cyBkaXJzLCByZWd1bGFyIGZpbGVzIGFuZCBzeW1saW5rcyAob3ZlcndyaXRlIGVuYWJs
ZWQgd2l0aCB3YXJuaW5ncywKbWFpbmx5IGZvciB1c2Ugd2l0aCBXU0wsIGluIGNhc2UgY2VydGFp
biBmaWxlcyBvdmVybGFwLAppLmUuICJwYXRoL3RvL2ZpbGUvYWxhcm0iIGFuZCAicGF0aC90by9m
aWxlL0FsYXJtIikuClJhdyBhbmQgY29tcHJlc3NlZCBkYXRhIGNodW5rcyBhcmUgaGFuZGxlZCB3
aXRoIGEgdW5pZmllZCBmdW5jdGlvbiB0byBhdm9pZApyZXBlYXRzLCBjb21wcmVzc2VkIGRhdGEg
aXMgdmVyaWZpZWQgbGluZWFyeSAod2l0aCBFUk9GU19HRVRfQkxPQ0tTX0ZJRU1BUCkKaW5zdGVh
ZCBvZiBsb29rYmFjaywgYXMgaXQncyBwcm9ibGVtYXRpYyB0byBleHRyYWN0IGRhdGEgd2hlbiBs
b29waW5nCmJhY2t3YXJkcy4KQWxzbyByZWZhY3RvcmVkIHNvbWUgZnVuY3Rpb24gbmFtZXMgYW5k
IHN0cmluZ3MgZm9yIGNvbnNpc3RlbmN5LgoKU2lnbmVkLW9mZi1ieTogSWdvciBPc3RhcGVua28g
PGlnb3JlaXNiZXJnQGdtYWlsLmNvbT4KLS0tCiBkdW1wL21haW4uYyB8ICAxMiArLQogZnNjay9t
YWluLmMgfCA2MDMgKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrKysrLS0tLS0t
LS0tLS0tLQogMiBmaWxlcyBjaGFuZ2VkLCA0NTkgaW5zZXJ0aW9ucygrKSwgMTU2IGRlbGV0aW9u
cygtKQoKZGlmZiAtLWdpdCBhL2R1bXAvbWFpbi5jIGIvZHVtcC9tYWluLmMKaW5kZXggMDcyZDcy
Ni4uYTFhNmY2YiAxMDA2NDQKLS0tIGEvZHVtcC9tYWluLmMKKysrIGIvZHVtcC9tYWluLmMKQEAg
LTkxLDcgKzkxLDcgQEAgc3RhdGljIHN0cnVjdCBlcm9mc2R1bXBfZmVhdHVyZSBmZWF0dXJlX2xp
c3RzW10gPSB7CiB9OwogCiBzdGF0aWMgaW50IGVyb2ZzX3JlYWRfZGlyKGVyb2ZzX25pZF90IG5p
ZCwgZXJvZnNfbmlkX3QgcGFyZW50X25pZCk7Ci1zdGF0aWMgaW5saW5lIGludCBlcm9mc19jaGVj
a2RpcmVudChzdHJ1Y3QgZXJvZnNfZGlyZW50ICpkZSwKK3N0YXRpYyBpbmxpbmUgaW50IGVyb2Zz
X2NoZWNrX2RpcmVudChzdHJ1Y3QgZXJvZnNfZGlyZW50ICpkZSwKIAkJc3RydWN0IGVyb2ZzX2Rp
cmVudCAqbGFzdF9kZSwKIAkJdTMyIG1heHNpemUsIGNvbnN0IGNoYXIgKmRuYW1lKTsKIApAQCAt
MTAwLDEzICsxMDAsMTMgQEAgc3RhdGljIHZvaWQgdXNhZ2Uodm9pZCkKIAlmcHV0cygidXNhZ2U6
IFtvcHRpb25zXSBJTUFHRVxuXG4iCiAJICAgICAgIkR1bXAgZXJvZnMgbGF5b3V0IGZyb20gSU1B
R0UsIGFuZCBbb3B0aW9uc10gYXJlOlxuIgogCSAgICAgICIgLVMgICAgICAgICAgICAgIHNob3cg
c3RhdGlzdGljIGluZm9ybWF0aW9uIG9mIHRoZSBpbWFnZVxuIgotCSAgICAgICIgLVYgICAgICAg
ICAgICAgIHByaW50IHRoZSB2ZXJzaW9uIG51bWJlciBvZiBkdW1wLmVyb2ZzIGFuZCBleGl0Llxu
IgorCSAgICAgICIgLVYgICAgICAgICAgICAgIHByaW50IHRoZSB2ZXJzaW9uIG51bWJlciBvZiBk
dW1wLmVyb2ZzIGFuZCBleGl0XG4iCiAJICAgICAgIiAtZSAgICAgICAgICAgICAgc2hvdyBleHRl
bnQgaW5mbyAoLS1uaWQgaXMgcmVxdWlyZWQpXG4iCiAJICAgICAgIiAtcyAgICAgICAgICAgICAg
c2hvdyBpbmZvcm1hdGlvbiBhYm91dCBzdXBlcmJsb2NrXG4iCiAJICAgICAgIiAtLWRldmljZT1Y
ICAgICAgc3BlY2lmeSBhbiBleHRyYSBkZXZpY2UgdG8gYmUgdXNlZCB0b2dldGhlclxuIgogCSAg
ICAgICIgLS1uaWQ9IyAgICAgICAgIHNob3cgdGhlIHRhcmdldCBpbm9kZSBpbmZvIG9mIG5pZCAj
XG4iCiAJICAgICAgIiAtLXBhdGg9WCAgICAgICAgc2hvdyB0aGUgdGFyZ2V0IGlub2RlIGluZm8g
b2YgcGF0aCBYXG4iCi0JICAgICAgIiAtLWhlbHAgICAgICAgICAgZGlzcGxheSB0aGlzIGhlbHAg
YW5kIGV4aXQuXG4iLAorCSAgICAgICIgLS1oZWxwICAgICAgICAgIGRpc3BsYXkgdGhpcyBoZWxw
IGFuZCBleGl0XG4iLAogCSAgICAgIHN0ZGVycik7CiB9CiAKQEAgLTI0NCw3ICsyNDQsNyBAQCBz
dGF0aWMgdm9pZCB1cGRhdGVfZmlsZV9zaXplX3N0YXRhdGljcyhlcm9mc19vZmZfdCBvY2N1cGll
ZF9zaXplLAogCQlzdGF0cy5maWxlX2NvbXBfc2l6ZVtvY2N1cGllZF9zaXplX21hcmtdKys7CiB9
CiAKLXN0YXRpYyBpbmxpbmUgaW50IGVyb2ZzX2NoZWNrZGlyZW50KHN0cnVjdCBlcm9mc19kaXJl
bnQgKmRlLAorc3RhdGljIGlubGluZSBpbnQgZXJvZnNfY2hlY2tfZGlyZW50KHN0cnVjdCBlcm9m
c19kaXJlbnQgKmRlLAogCQlzdHJ1Y3QgZXJvZnNfZGlyZW50ICpsYXN0X2RlLAogCQl1MzIgbWF4
c2l6ZSwgY29uc3QgY2hhciAqZG5hbWUpCiB7CkBAIC0zNTMsNyArMzUzLDcgQEAgc3RhdGljIGlu
dCBlcm9mc19yZWFkX2Rpcihlcm9mc19uaWRfdCBuaWQsIGVyb2ZzX25pZF90IHBhcmVudF9uaWQp
CiAJCQl9CiAKIAkJCWRuYW1lID0gKGNoYXIgKilidWYgKyBuYW1lb2ZmOwotCQkJcmV0ID0gZXJv
ZnNfY2hlY2tkaXJlbnQoZGUsIGVuZCwgbWF4c2l6ZSwgZG5hbWUpOworCQkJcmV0ID0gZXJvZnNf
Y2hlY2tfZGlyZW50KGRlLCBlbmQsIG1heHNpemUsIGRuYW1lKTsKIAkJCWlmIChyZXQgPCAwKQog
CQkJCXJldHVybiByZXQ7CiAJCQlyZXQgPSBlcm9mc19yZWFkX2RpcmVudChkZSwgbmlkLCBwYXJl
bnRfbmlkLCBkbmFtZSk7CkBAIC00MDQsNyArNDA0LDcgQEAgc3RhdGljIGludCBlcm9mc19nZXRf
cGF0aG5hbWUoZXJvZnNfbmlkX3QgbmlkLCBlcm9mc19uaWRfdCBwYXJlbnRfbmlkLAogCiAJCQlu
YW1lb2ZmID0gbGUxNl90b19jcHUoZGUtPm5hbWVvZmYpOwogCQkJZG5hbWUgPSAoY2hhciAqKWJ1
ZiArIG5hbWVvZmY7Ci0JCQlsZW4gPSBlcm9mc19jaGVja2RpcmVudChkZSwgZW5kLCBtYXhzaXpl
LCBkbmFtZSk7CisJCQlsZW4gPSBlcm9mc19jaGVja19kaXJlbnQoZGUsIGVuZCwgbWF4c2l6ZSwg
ZG5hbWUpOwogCQkJaWYgKGxlbiA8IDApCiAJCQkJcmV0dXJuIGxlbjsKIApkaWZmIC0tZ2l0IGEv
ZnNjay9tYWluLmMgYi9mc2NrL21haW4uYwppbmRleCBhZDQ4ZTM1Li45NjVhYmVlIDEwMDY0NAot
LS0gYS9mc2NrL21haW4uYworKysgYi9mc2NrL21haW4uYwpAQCAtNiw2ICs2LDggQEAKICNpbmNs
dWRlIDxzdGRsaWIuaD4KICNpbmNsdWRlIDxnZXRvcHQuaD4KICNpbmNsdWRlIDx0aW1lLmg+Cisj
aW5jbHVkZSA8dXRpbWUuaD4KKyNpbmNsdWRlIDx1bmlzdGQuaD4KICNpbmNsdWRlIDxzeXMvc3Rh
dC5oPgogI2luY2x1ZGUgImVyb2ZzL3ByaW50LmgiCiAjaW5jbHVkZSAiZXJvZnMvaW8uaCIKQEAg
LTE3LDYgKzE5LDkgQEAgc3RydWN0IGVyb2ZzZnNja19jZmcgewogCWJvb2wgY29ycnVwdGVkOwog
CWJvb2wgcHJpbnRfY29tcF9yYXRpbzsKIAlib29sIGNoZWNrX2RlY29tcDsKKwljaGFyICpleHRy
YWN0X2RpcjsKKwlpbnQgZXh0cmFjdF9kaXJfbGVuOworCWJvb2wgcHJlc2VydmU7CiAJdTY0IHBo
eXNpY2FsX2Jsb2NrczsKIAl1NjQgbG9naWNhbF9ibG9ja3M7CiB9OwpAQCAtMjQsOCArMjksOSBA
QCBzdGF0aWMgc3RydWN0IGVyb2ZzZnNja19jZmcgZnNja2NmZzsKIAogc3RhdGljIHN0cnVjdCBv
cHRpb24gbG9uZ19vcHRpb25zW10gPSB7CiAJeyJoZWxwIiwgbm9fYXJndW1lbnQsIDAsIDF9LAot
CXsiZXh0cmFjdCIsIG5vX2FyZ3VtZW50LCAwLCAyfSwKLQl7ImRldmljZSIsIHJlcXVpcmVkX2Fy
Z3VtZW50LCAwLCAzfSwKKwl7ImV4dHJhY3QiLCBvcHRpb25hbF9hcmd1bWVudCwgMCwgMn0sCisJ
eyJwcmVzZXJ2ZSIsIG5vX2FyZ3VtZW50LCAwLCAzfSwKKwl7ImRldmljZSIsIHJlcXVpcmVkX2Fy
Z3VtZW50LCAwLCA0fSwKIAl7MCwgMCwgMCwgMH0sCiB9OwogCkBAIC0zMywxMiArMzksMTMgQEAg
c3RhdGljIHZvaWQgdXNhZ2Uodm9pZCkKIHsKIAlmcHV0cygidXNhZ2U6IFtvcHRpb25zXSBJTUFH
RVxuXG4iCiAJICAgICAgIkNoZWNrIGVyb2ZzIGZpbGVzeXN0ZW0gaW50ZWdyaXR5IG9mIElNQUdF
LCBhbmQgW29wdGlvbnNdIGFyZTpcbiIKLQkgICAgICAiIC1WICAgICAgICAgICAgICBwcmludCB0
aGUgdmVyc2lvbiBudW1iZXIgb2YgZnNjay5lcm9mcyBhbmQgZXhpdC5cbiIKKwkgICAgICAiIC1W
ICAgICAgICAgICAgICBwcmludCB0aGUgdmVyc2lvbiBudW1iZXIgb2YgZnNjay5lcm9mcyBhbmQg
ZXhpdFxuIgogCSAgICAgICIgLWQjICAgICAgICAgICAgIHNldCBvdXRwdXQgbWVzc2FnZSBsZXZl
bCB0byAjIChtYXhpbXVtIDkpXG4iCiAJICAgICAgIiAtcCAgICAgICAgICAgICAgcHJpbnQgdG90
YWwgY29tcHJlc3Npb24gcmF0aW8gb2YgYWxsIGZpbGVzXG4iCiAJICAgICAgIiAtLWRldmljZT1Y
ICAgICAgc3BlY2lmeSBhbiBleHRyYSBkZXZpY2UgdG8gYmUgdXNlZCB0b2dldGhlclxuIgotCSAg
ICAgICIgLS1leHRyYWN0ICAgICAgIGNoZWNrIGlmIGFsbCBmaWxlcyBhcmUgd2VsbCBlbmNvZGVk
XG4iCi0JICAgICAgIiAtLWhlbHAgICAgICAgICAgZGlzcGxheSB0aGlzIGhlbHAgYW5kIGV4aXQu
XG4iLAorCSAgICAgICIgLS1leHRyYWN0Wz1YXSAgIGNoZWNrIGlmIGFsbCBmaWxlcyBhcmUgd2Vs
bCBlbmNvZGVkLCBvcHRpb25hbGx5IGV4dHJhY3QgdG8gWFxuIgorCSAgICAgICIgLS1wcmVzZXJ2
ZSAgICAgIHByZXNlcnZlIG1vZGUsIG93bmVyIGFuZCBncm91cCAoLS1leHRyYWN0PVggaXMgcmVx
dWlyZWQpXG4iCisJICAgICAgIiAtLWhlbHAgICAgICAgICAgZGlzcGxheSB0aGlzIGhlbHAgYW5k
IGV4aXRcbiIsCiAJICAgICAgc3RkZXJyKTsKIH0KIApAQCAtNzMsOCArODAsMjYgQEAgc3RhdGlj
IGludCBlcm9mc2ZzY2tfcGFyc2Vfb3B0aW9uc19jZmcoaW50IGFyZ2MsIGNoYXIgKiphcmd2KQog
CQkJZXhpdCgwKTsKIAkJY2FzZSAyOgogCQkJZnNja2NmZy5jaGVja19kZWNvbXAgPSB0cnVlOwor
CQkJaWYgKG9wdGFyZykgeworCQkJCWZzY2tjZmcuZXh0cmFjdF9kaXIgPSBzdHJkdXAob3B0YXJn
KTsKKwkJCQlpZiAoIWZzY2tjZmcuZXh0cmFjdF9kaXIpCisJCQkJCXJldHVybiAtRU5PTUVNOwor
CQkJCWlmICgqZnNja2NmZy5leHRyYWN0X2RpciA9PSAnXDAnKQorCQkJCQlyZXR1cm4gLUVJTlZB
TDsKKworCQkJCWZzY2tjZmcuZXh0cmFjdF9kaXJfbGVuID0gc3RybGVuKGZzY2tjZmcuZXh0cmFj
dF9kaXIpOworCQkJCS8qIHJlbW92ZSB0cmFpbGluZyBzbGFzaGVzICovCisJCQkJd2hpbGUgKGZz
Y2tjZmcuZXh0cmFjdF9kaXJfbGVuID4gMCAmJgorCQkJCQkgICBmc2NrY2ZnLmV4dHJhY3RfZGly
W2ZzY2tjZmcuZXh0cmFjdF9kaXJfbGVuIC0gMV0gPT0gJy8nKSB7CisJCQkJCWZzY2tjZmcuZXh0
cmFjdF9kaXJbZnNja2NmZy5leHRyYWN0X2Rpcl9sZW4gLSAxXSA9ICdcMCc7CisJCQkJCWZzY2tj
ZmcuZXh0cmFjdF9kaXJfbGVuLS07CisJCQkJfQorCQkJfQogCQkJYnJlYWs7CiAJCWNhc2UgMzoK
KwkJCWZzY2tjZmcucHJlc2VydmUgPSB0cnVlOworCQkJYnJlYWs7CisJCWNhc2UgNDoKIAkJCXJl
dCA9IGJsb2Jfb3Blbl9ybyhvcHRhcmcpOwogCQkJaWYgKHJldCkKIAkJCQlyZXR1cm4gcmV0OwpA
QCAtODgsNiArMTEzLDkgQEAgc3RhdGljIGludCBlcm9mc2ZzY2tfcGFyc2Vfb3B0aW9uc19jZmco
aW50IGFyZ2MsIGNoYXIgKiphcmd2KQogCWlmIChvcHRpbmQgPj0gYXJnYykKIAkJcmV0dXJuIC1F
SU5WQUw7CiAKKwlpZiAoZnNja2NmZy5wcmVzZXJ2ZSAmJiAhZnNja2NmZy5leHRyYWN0X2RpcikK
KwkJcmV0dXJuIC1FSU5WQUw7CisKIAljZmcuY19pbWdfcGF0aCA9IHN0cmR1cChhcmd2W29wdGlu
ZCsrXSk7CiAJaWYgKCFjZmcuY19pbWdfcGF0aCkKIAkJcmV0dXJuIC1FTk9NRU07CkBAIC0yNDEs
MTM1ICsyNjksMTE5IEBAIG91dDoKIAlyZXR1cm4gcmV0OwogfQogCi1zdGF0aWMgaW50IHZlcmlm
eV91bmNvbXByZXNzZWRfaW5vZGUoc3RydWN0IGVyb2ZzX2lub2RlICppbm9kZSkKK3N0YXRpYyBp
bmxpbmUgaW50IGVyb2ZzX2NoZWNrX2RpcmVudChzdHJ1Y3QgZXJvZnNfZGlyZW50ICpkZSwKKwkJ
c3RydWN0IGVyb2ZzX2RpcmVudCAqbGFzdF9kZSwKKwkJdTMyIG1heHNpemUsIGNvbnN0IGNoYXIg
KmRuYW1lKQogewotCXN0cnVjdCBlcm9mc19tYXBfYmxvY2tzIG1hcCA9IHsKLQkJLmluZGV4ID0g
VUlOVF9NQVgsCi0JfTsKLQlpbnQgcmV0OwotCWVyb2ZzX29mZl90IHB0ciA9IDA7Ci0JdTY0IGlf
YmxvY2tzID0gRElWX1JPVU5EX1VQKGlub2RlLT5pX3NpemUsIEVST0ZTX0JMS1NJWik7Ci0KLQl3
aGlsZSAocHRyIDwgaW5vZGUtPmlfc2l6ZSkgewotCQltYXAubV9sYSA9IHB0cjsKLQkJcmV0ID0g
ZXJvZnNfbWFwX2Jsb2Nrcyhpbm9kZSwgJm1hcCwgMCk7Ci0JCWlmIChyZXQpCi0JCQlyZXR1cm4g
cmV0OwotCi0JCWlmIChtYXAubV9wbGVuICE9IG1hcC5tX2xsZW4gfHwgcHRyICE9IG1hcC5tX2xh
KSB7Ci0JCQllcm9mc19lcnIoImJyb2tlbiBkYXRhIGNodW5rIGxheW91dCBtX2xhICUiIFBSSXU2
NCAiIHB0ciAlIiBQUkl1NjQgIiBtX2xsZW4gJSIgUFJJdTY0ICIgbV9wbGVuICUiIFBSSXU2NCwK
LQkJCQkgIG1hcC5tX2xhLCBwdHIsIG1hcC5tX2xsZW4sIG1hcC5tX3BsZW4pOwotCQkJcmV0dXJu
IC1FRlNDT1JSVVBURUQ7Ci0JCX0KLQotCQlpZiAoIShtYXAubV9mbGFncyAmIEVST0ZTX01BUF9N
QVBQRUQpICYmICFtYXAubV9sbGVuKSB7Ci0JCQkvKiByZWFjaGVkIEVPRiAqLwotCQkJcHRyID0g
aW5vZGUtPmlfc2l6ZTsKLQkJCWNvbnRpbnVlOwotCQl9Ci0KLQkJcHRyICs9IG1hcC5tX2xsZW47
CisJaW50IGRuYW1lX2xlbjsKKwl1bnNpZ25lZCBpbnQgbmFtZW9mZiA9IGxlMTZfdG9fY3B1KGRl
LT5uYW1lb2ZmKTsKKwllcm9mc19uaWRfdCBuaWQgPSBsZTY0X3RvX2NwdShkZS0+bmlkKTsKKwor
CWlmIChuYW1lb2ZmIDwgc2l6ZW9mKHN0cnVjdCBlcm9mc19kaXJlbnQpIHx8CisJCQluYW1lb2Zm
ID49IFBBR0VfU0laRSkgeworCQllcm9mc19lcnIoImludmFsaWQgZGVbMF0ubmFtZW9mZiAldSBA
IG5pZCAlbGx1IiwKKwkJCQluYW1lb2ZmLCBuaWQgfCAwVUxMKTsKKwkJcmV0dXJuIC1FRlNDT1JS
VVBURUQ7CiAJfQogCi0JaWYgKGZzY2tjZmcucHJpbnRfY29tcF9yYXRpbykgewotCQlmc2NrY2Zn
LmxvZ2ljYWxfYmxvY2tzICs9IGlfYmxvY2tzOwotCQlmc2NrY2ZnLnBoeXNpY2FsX2Jsb2NrcyAr
PSBpX2Jsb2NrczsKKwlkbmFtZV9sZW4gPSAoZGUgKyAxID49IGxhc3RfZGUpID8gc3Rybmxlbihk
bmFtZSwgbWF4c2l6ZSAtIG5hbWVvZmYpIDoKKwkJCQlsZTE2X3RvX2NwdShkZVsxXS5uYW1lb2Zm
KSAtIG5hbWVvZmY7CisJLyogYSBjb3JydXB0ZWQgZW50cnkgaXMgZm91bmQgKi8KKwlpZiAobmFt
ZW9mZiArIGRuYW1lX2xlbiA+IG1heHNpemUgfHwKKwkJCWRuYW1lX2xlbiA+IEVST0ZTX05BTUVf
TEVOKSB7CisJCWVyb2ZzX2VycigiYm9ndXMgZGlyZW50IEAgbmlkICVsbHUiLCBuaWQgfCAwVUxM
KTsKKwkJREJHX0JVR09OKDEpOworCQlyZXR1cm4gLUVGU0NPUlJVUFRFRDsKIAl9Ci0KLQlyZXR1
cm4gMDsKKwlpZiAoZGUtPmZpbGVfdHlwZSA+PSBFUk9GU19GVF9NQVgpIHsKKwkJZXJvZnNfZXJy
KCJpbnZhbGlkIGZpbGUgdHlwZSAlbGx1IiwgbmlkIHwgMFVMTCk7CisJCXJldHVybiAtRUZTQ09S
UlVQVEVEOworCX0KKwlyZXR1cm4gZG5hbWVfbGVuOwogfQogCi1zdGF0aWMgaW50IHZlcmlmeV9j
b21wcmVzc2VkX2lub2RlKHN0cnVjdCBlcm9mc19pbm9kZSAqaW5vZGUpCitzdGF0aWMgaW50IGVy
b2ZzX2dldF9wYXRobmFtZShlcm9mc19uaWRfdCBuaWQsIGVyb2ZzX25pZF90IHBhcmVudF9uaWQs
CisJCWVyb2ZzX25pZF90IHRhcmdldCwgY2hhciAqcGF0aCwgdW5zaWduZWQgaW50IHBvcykKIHsK
LQlzdHJ1Y3QgZXJvZnNfbWFwX2Jsb2NrcyBtYXAgPSB7Ci0JCS5pbmRleCA9IFVJTlRfTUFYLAot
CX07Ci0Jc3RydWN0IGVyb2ZzX21hcF9kZXYgbWRldjsKLQlpbnQgcmV0ID0gMDsKLQl1NjQgcGNo
dW5rX2xlbiA9IDA7Ci0JZXJvZnNfb2ZmX3QgZW5kID0gaW5vZGUtPmlfc2l6ZTsKLQl1bnNpZ25l
ZCBpbnQgcmF3X3NpemUgPSAwLCBidWZmZXJfc2l6ZSA9IDA7Ci0JY2hhciAqcmF3ID0gTlVMTCwg
KmJ1ZmZlciA9IE5VTEw7Ci0KLQl3aGlsZSAoZW5kID4gMCkgewotCQltYXAubV9sYSA9IGVuZCAt
IDE7Ci0KLQkJcmV0ID0gel9lcm9mc19tYXBfYmxvY2tzX2l0ZXIoaW5vZGUsICZtYXAsIDApOwot
CQlpZiAocmV0KQotCQkJZ290byBvdXQ7CisJaW50IGVycjsKKwllcm9mc19vZmZfdCBvZmZzZXQ7
CisJY2hhciBidWZbRVJPRlNfQkxLU0laXTsKKwlzdHJ1Y3QgZXJvZnNfaW5vZGUgaW5vZGUgPSB7
IC5uaWQgPSBuaWQgfTsKIAotCQlpZiAoZW5kID4gbWFwLm1fbGEgKyBtYXAubV9sbGVuKSB7Ci0J
CQllcm9mc19lcnIoImJyb2tlbiBjb21wcmVzc2VkIGNodW5rIGxheW91dCBtX2xhICUiIFBSSXU2
NCAiIG1fbGxlbiAlIiBQUkl1NjQgIiBlbmQgJSIgUFJJdTY0LAotCQkJCSAgbWFwLm1fbGEsIG1h
cC5tX2xsZW4sIGVuZCk7Ci0JCQlyZXQgPSAtRUZTQ09SUlVQVEVEOwotCQkJZ290byBvdXQ7Ci0J
CX0KKwlwYXRoW3BvcysrXSA9ICcvJzsKKwlpZiAodGFyZ2V0ID09IHNiaS5yb290X25pZCkKKwkJ
cmV0dXJuIDA7CiAKLQkJcGNodW5rX2xlbiArPSBtYXAubV9wbGVuOwotCQllbmQgPSBtYXAubV9s
YTsKKwllcnIgPSBlcm9mc19yZWFkX2lub2RlX2Zyb21fZGlzaygmaW5vZGUpOworCWlmIChlcnIp
IHsKKwkJZXJvZnNfZXJyKCJyZWFkIGlub2RlIGZhaWxlZCBAIG5pZCAlbGx1IiwgbmlkIHwgMFVM
TCk7CisJCXJldHVybiBlcnI7CisJfQogCi0JCWlmICghZnNja2NmZy5jaGVja19kZWNvbXAgfHwg
IShtYXAubV9mbGFncyAmIEVST0ZTX01BUF9NQVBQRUQpKQotCQkJY29udGludWU7CisJb2Zmc2V0
ID0gMDsKKwl3aGlsZSAob2Zmc2V0IDwgaW5vZGUuaV9zaXplKSB7CisJCWVyb2ZzX29mZl90IG1h
eHNpemUgPSBtaW5fdChlcm9mc19vZmZfdCwKKwkJCQkJaW5vZGUuaV9zaXplIC0gb2Zmc2V0LCBF
Uk9GU19CTEtTSVopOworCQlzdHJ1Y3QgZXJvZnNfZGlyZW50ICpkZSA9ICh2b2lkICopYnVmOwor
CQlzdHJ1Y3QgZXJvZnNfZGlyZW50ICplbmQ7CisJCXVuc2lnbmVkIGludCBuYW1lb2ZmOwogCi0J
CWlmIChtYXAubV9wbGVuID4gcmF3X3NpemUpIHsKLQkJCXJhd19zaXplID0gbWFwLm1fcGxlbjsK
LQkJCXJhdyA9IHJlYWxsb2MocmF3LCByYXdfc2l6ZSk7Ci0JCQlCVUdfT04oIXJhdyk7Ci0JCX0K
KwkJZXJyID0gZXJvZnNfcHJlYWQoJmlub2RlLCBidWYsIG1heHNpemUsIG9mZnNldCk7CisJCWlm
IChlcnIpCisJCQlyZXR1cm4gZXJyOwogCi0JCWlmIChtYXAubV9sbGVuID4gYnVmZmVyX3NpemUp
IHsKLQkJCWJ1ZmZlcl9zaXplID0gbWFwLm1fbGxlbjsKLQkJCWJ1ZmZlciA9IHJlYWxsb2MoYnVm
ZmVyLCBidWZmZXJfc2l6ZSk7Ci0JCQlCVUdfT04oIWJ1ZmZlcik7Ci0JCX0KKwkJbmFtZW9mZiA9
IGxlMTZfdG9fY3B1KGRlLT5uYW1lb2ZmKTsKKwkJZW5kID0gKHZvaWQgKilidWYgKyBuYW1lb2Zm
OworCQl3aGlsZSAoZGUgPCBlbmQpIHsKKwkJCWNvbnN0IGNoYXIgKmRuYW1lOworCQkJaW50IGxl
bjsKKworCQkJbmFtZW9mZiA9IGxlMTZfdG9fY3B1KGRlLT5uYW1lb2ZmKTsKKwkJCWRuYW1lID0g
KGNoYXIgKilidWYgKyBuYW1lb2ZmOworCQkJbGVuID0gZXJvZnNfY2hlY2tfZGlyZW50KGRlLCBl
bmQsIG1heHNpemUsIGRuYW1lKTsKKwkJCWlmIChsZW4gPCAwKQorCQkJCXJldHVybiBsZW47CisK
KwkJCWlmIChsZTY0X3RvX2NwdShkZS0+bmlkKSA9PSB0YXJnZXQpIHsKKwkJCQltZW1jcHkocGF0
aCArIHBvcywgZG5hbWUsIGxlbik7CisJCQkJcGF0aFtwb3MgKyBsZW5dID0gJ1wwJzsKKwkJCQly
ZXR1cm4gMDsKKwkJCX0KIAotCQltZGV2ID0gKHN0cnVjdCBlcm9mc19tYXBfZGV2KSB7Ci0JCQku
bV9kZXZpY2VpZCA9IG1hcC5tX2RldmljZWlkLAotCQkJLm1fcGEgPSBtYXAubV9wYSwKLQkJfTsK
LQkJcmV0ID0gZXJvZnNfbWFwX2Rldigmc2JpLCAmbWRldik7Ci0JCWlmIChyZXQpIHsKLQkJCWVy
b2ZzX2VycigiZmFpbGVkIHRvIG1hcCBkZXZpY2Ugb2YgbV9wYSAlIiBQUkl1NjQgIiwgbV9kZXZp
Y2VpZCAldSBAIG5pZCAlbGx1OiAlZCIsCi0JCQkJICBtYXAubV9wYSwgbWFwLm1fZGV2aWNlaWQs
IGlub2RlLT5uaWQgfCAwVUxMLCByZXQpOwotCQkJZ290byBvdXQ7CisJCQlpZiAoZGUtPmZpbGVf
dHlwZSA9PSBFUk9GU19GVF9ESVIgJiYKKwkJCSAgICBsZTY0X3RvX2NwdShkZS0+bmlkKSAhPSBw
YXJlbnRfbmlkICYmCisJCQkgICAgbGU2NF90b19jcHUoZGUtPm5pZCkgIT0gbmlkKSB7CisJCQkJ
bWVtY3B5KHBhdGggKyBwb3MsIGRuYW1lLCBsZW4pOworCQkJCWVyciA9IGVyb2ZzX2dldF9wYXRo
bmFtZShsZTY0X3RvX2NwdShkZS0+bmlkKSwKKwkJCQkJCW5pZCwgdGFyZ2V0LCBwYXRoLCBwb3Mg
KyBsZW4pOworCQkJCWlmICghZXJyKQorCQkJCQlyZXR1cm4gMDsKKwkJCQltZW1zZXQocGF0aCAr
IHBvcywgMCwgbGVuKTsKKwkJCX0KKwkJCSsrZGU7CiAJCX0KKwkJb2Zmc2V0ICs9IG1heHNpemU7
CisJfQorCXJldHVybiAtMTsKK30KIAotCQlyZXQgPSBkZXZfcmVhZChtZGV2Lm1fZGV2aWNlaWQs
IHJhdywgbWRldi5tX3BhLCBtYXAubV9wbGVuKTsKLQkJaWYgKHJldCA8IDApIHsKLQkJCWVyb2Zz
X2VycigiZmFpbGVkIHRvIHJlYWQgY29tcHJlc3NlZCBkYXRhIG9mIG1fcGEgJSIgUFJJdTY0ICIs
IG1fcGxlbiAlIiBQUkl1NjQgIiBAIG5pZCAlbGx1OiAlZCIsCi0JCQkJICBtZGV2Lm1fcGEsIG1h
cC5tX3BsZW4sIGlub2RlLT5uaWQgfCAwVUxMLCByZXQpOwotCQkJZ290byBvdXQ7Ci0JCX0KK3N0
YXRpYyB2b2lkIGVyb2ZzX3Jlc3RvcmVfc3RhdChzdHJ1Y3QgZXJvZnNfaW5vZGUgKmlub2RlLCBj
aGFyICpwYXRoKQoreworCWludCByZXQ7CisJc3RydWN0IHV0aW1idWYgdXQ7CiAKLQkJcmV0ID0g
el9lcm9mc19kZWNvbXByZXNzKCYoc3RydWN0IHpfZXJvZnNfZGVjb21wcmVzc19yZXEpIHsKLQkJ
CQkJLmluID0gcmF3LAotCQkJCQkub3V0ID0gYnVmZmVyLAotCQkJCQkuZGVjb2RlZHNraXAgPSAw
LAotCQkJCQkuaW5wdXRzaXplID0gbWFwLm1fcGxlbiwKLQkJCQkJLmRlY29kZWRsZW5ndGggPSBt
YXAubV9sbGVuLAotCQkJCQkuYWxnID0gbWFwLm1fYWxnb3JpdGhtZm9ybWF0LAotCQkJCQkucGFy
dGlhbF9kZWNvZGluZyA9IDAKLQkJCQkJIH0pOworCXJldCA9IGNobW9kKHBhdGgsIGlub2RlLT5p
X21vZGUpOworCWlmIChyZXQgPCAwKQorCQllcm9mc193YXJuKCJmYWlsZWQgdG8gc2V0IHBlcm1p
c3Npb25zOiAlcyIsIHBhdGgpOwogCi0JCWlmIChyZXQgPCAwKSB7Ci0JCQllcm9mc19lcnIoImZh
aWxlZCB0byBkZWNvbXByZXNzIGRhdGEgb2YgbV9wYSAlIiBQUkl1NjQgIiwgbV9wbGVuICUiIFBS
SXU2NCAiIEAgbmlkICVsbHU6ICVkIiwKLQkJCQkgIG1kZXYubV9wYSwgbWFwLm1fcGxlbiwgaW5v
ZGUtPm5pZCB8IDBVTEwsIHJldCk7Ci0JCQlnb3RvIG91dDsKLQkJfQotCX0KKwlyZXQgPSBjaG93
bihwYXRoLCBpbm9kZS0+aV91aWQsIGlub2RlLT5pX2dpZCk7CisJaWYgKHJldCA8IDApCisJCWVy
b2ZzX3dhcm4oImZhaWxlZCB0byBjaGFuZ2Ugb3duZXJzaGlwOiAlcyIsIHBhdGgpOwogCi0JaWYg
KGZzY2tjZmcucHJpbnRfY29tcF9yYXRpbykgewotCQlmc2NrY2ZnLmxvZ2ljYWxfYmxvY2tzICs9
Ci0JCQlESVZfUk9VTkRfVVAoaW5vZGUtPmlfc2l6ZSwgRVJPRlNfQkxLU0laKTsKLQkJZnNja2Nm
Zy5waHlzaWNhbF9ibG9ja3MgKz0KLQkJCURJVl9ST1VORF9VUChwY2h1bmtfbGVuLCBFUk9GU19C
TEtTSVopOwotCX0KLW91dDoKLQlpZiAocmF3KQotCQlmcmVlKHJhdyk7Ci0JaWYgKGJ1ZmZlcikK
LQkJZnJlZShidWZmZXIpOwotCXJldHVybiByZXQgPCAwID8gcmV0IDogMDsKKwl1dC5hY3RpbWUg
PSBpbm9kZS0+aV9jdGltZTsKKwl1dC5tb2R0aW1lID0gaW5vZGUtPmlfY3RpbWU7CisJaWYgKHV0
aW1lKHBhdGgsICZ1dCkgPCAwKQorCQllcm9mc193YXJuKCJmYWlsZWQgdG8gc2V0IHRpbWVzOiAl
cyIsIHBhdGgpOwogfQogCiBzdGF0aWMgaW50IGVyb2ZzX3ZlcmlmeV94YXR0cihzdHJ1Y3QgZXJv
ZnNfaW5vZGUgKmlub2RlKQpAQCAtNDUwLDkgKzQ2MiwxOCBAQCBvdXQ6CiAJcmV0dXJuIHJldDsK
IH0KIAotc3RhdGljIGludCBlcm9mc192ZXJpZnlfaW5vZGVfZGF0YShzdHJ1Y3QgZXJvZnNfaW5v
ZGUgKmlub2RlKQorc3RhdGljIGludCBlcm9mc192ZXJpZnlfaW5vZGVfZGF0YShzdHJ1Y3QgZXJv
ZnNfaW5vZGUgKmlub2RlLCBpbnQgZmQpCiB7Ci0JaW50IHJldDsKKwlzdHJ1Y3QgZXJvZnNfbWFw
X2Jsb2NrcyBtYXAgPSB7CisJCS5pbmRleCA9IFVJTlRfTUFYLAorCX07CisJc3RydWN0IGVyb2Zz
X21hcF9kZXYgbWRldjsKKwlpbnQgcmV0ID0gMDsKKwlib29sIGNvbXByZXNzZWQ7CisJZXJvZnNf
b2ZmX3QgcHRyID0gMDsKKwl1NjQgcGNodW5rX2xlbiA9IDA7CisJdW5zaWduZWQgaW50IHJhd19z
aXplID0gMCwgYnVmZmVyX3NpemUgPSAwOworCWNoYXIgKnJhdyA9IE5VTEwsICpidWZmZXIgPSBO
VUxMOwogCiAJZXJvZnNfZGJnKCJ2ZXJpZnkgZGF0YSBjaHVuayBvZiBuaWQoJWxsdSk6IHR5cGUo
JWQpIiwKIAkJICBpbm9kZS0+bmlkIHwgMFVMTCwgaW5vZGUtPmRhdGFsYXlvdXQpOwpAQCAtNDYx
LDY1ICs0ODIsMTY4IEBAIHN0YXRpYyBpbnQgZXJvZnNfdmVyaWZ5X2lub2RlX2RhdGEoc3RydWN0
IGVyb2ZzX2lub2RlICppbm9kZSkKIAljYXNlIEVST0ZTX0lOT0RFX0ZMQVRfUExBSU46CiAJY2Fz
ZSBFUk9GU19JTk9ERV9GTEFUX0lOTElORToKIAljYXNlIEVST0ZTX0lOT0RFX0NIVU5LX0JBU0VE
OgotCQlyZXQgPSB2ZXJpZnlfdW5jb21wcmVzc2VkX2lub2RlKGlub2RlKTsKKwkJY29tcHJlc3Nl
ZCA9IGZhbHNlOwogCQlicmVhazsKIAljYXNlIEVST0ZTX0lOT0RFX0ZMQVRfQ09NUFJFU1NJT05f
TEVHQUNZOgogCWNhc2UgRVJPRlNfSU5PREVfRkxBVF9DT01QUkVTU0lPTjoKLQkJcmV0ID0gdmVy
aWZ5X2NvbXByZXNzZWRfaW5vZGUoaW5vZGUpOworCQljb21wcmVzc2VkID0gdHJ1ZTsKIAkJYnJl
YWs7CiAJZGVmYXVsdDoKLQkJcmV0ID0gLUVJTlZBTDsKLQkJYnJlYWs7CisJCWVyb2ZzX2Vycigi
dW5rbm93biBkYXRhbGF5b3V0Iik7CisJCXJldHVybiAtRUlOVkFMOworCX0KKworCXdoaWxlIChw
dHIgPCBpbm9kZS0+aV9zaXplKSB7CisJCW1hcC5tX2xhID0gcHRyOworCQlpZiAoY29tcHJlc3Nl
ZCkKKwkJCXJldCA9IHpfZXJvZnNfbWFwX2Jsb2Nrc19pdGVyKGlub2RlLCAmbWFwLCBFUk9GU19H
RVRfQkxPQ0tTX0ZJRU1BUCk7CisJCWVsc2UKKwkJCXJldCA9IGVyb2ZzX21hcF9ibG9ja3MoaW5v
ZGUsICZtYXAsIEVST0ZTX0dFVF9CTE9DS1NfRklFTUFQKTsKKwkJaWYgKHJldCkKKwkJCWdvdG8g
b3V0OworCisJCWlmIChjb21wcmVzc2VkKSB7CisJCQlpZiAocHRyICE9IG1hcC5tX2xhIHx8IG1h
cC5tX2xhICsgbWFwLm1fbGxlbiA+IGlub2RlLT5pX3NpemUpIHsKKwkJCQllcm9mc19lcnIoImJy
b2tlbiBjb21wcmVzc2VkIGNodW5rIGxheW91dCBwdHIgJSIgUFJJdTY0ICIgbV9sYSAlIiBQUkl1
NjQgIiBtX2xsZW4gJSIgUFJJdTY0ICIgaV9zaXplICUiIFBSSXU2NCwKKwkJCQkJICBwdHIsIG1h
cC5tX2xhLCBtYXAubV9sbGVuLCBpbm9kZS0+aV9zaXplKTsKKwkJCQlyZXQgPSAtRUZTQ09SUlVQ
VEVEOworCQkJCWdvdG8gb3V0OworCQkJfQorCQl9IGVsc2UgeworCQkJaWYgKHB0ciAhPSBtYXAu
bV9sYSB8fCBtYXAubV9sbGVuICE9IG1hcC5tX3BsZW4pIHsKKwkJCQllcm9mc19lcnIoImJyb2tl
biBkYXRhIGNodW5rIGxheW91dCBwdHIgJSIgUFJJdTY0ICIgbV9sYSAlIiBQUkl1NjQgIiBtX2xs
ZW4gJSIgUFJJdTY0ICIgbV9wbGVuICUiIFBSSXU2NCwKKwkJCQkJICBwdHIsIG1hcC5tX2xhLCBt
YXAubV9sbGVuLCBtYXAubV9wbGVuKTsKKwkJCQlyZXQgPSAtRUZTQ09SUlVQVEVEOworCQkJCWdv
dG8gb3V0OworCQkJfQorCisJCQlpZiAobWFwLm1fbGEgKyBtYXAubV9sbGVuID4gaW5vZGUtPmlf
c2l6ZSkKKwkJCQltYXAubV9sbGVuID0gaW5vZGUtPmlfc2l6ZSAtIG1hcC5tX2xhOworCQl9CisK
KwkJcGNodW5rX2xlbiArPSBtYXAubV9wbGVuOworCQlwdHIgKz0gbWFwLm1fbGxlbjsKKworCQkv
KiByZWFjaGVkIEVPRj8gKi8KKwkJaWYgKCEobWFwLm1fZmxhZ3MgJiBFUk9GU19NQVBfTUFQUEVE
KSAmJiAhbWFwLm1fbGxlbikKKwkJCWJyZWFrOworCisJCS8qIHNob3VsZCBza2lwIGRlY29tcD8g
Ki8KKwkJaWYgKCFmc2NrY2ZnLmNoZWNrX2RlY29tcCkKKwkJCWNvbnRpbnVlOworCisJCWlmICht
YXAubV9wbGVuID4gcmF3X3NpemUpIHsKKwkJCXJhd19zaXplID0gbWFwLm1fcGxlbjsKKwkJCXJh
dyA9IHJlYWxsb2MocmF3LCByYXdfc2l6ZSk7CisJCQlCVUdfT04oIXJhdyk7CisJCX0KKworCQlp
ZiAoY29tcHJlc3NlZCAmJiBtYXAubV9sbGVuID4gYnVmZmVyX3NpemUpIHsKKwkJCWJ1ZmZlcl9z
aXplID0gbWFwLm1fbGxlbjsKKwkJCWJ1ZmZlciA9IHJlYWxsb2MoYnVmZmVyLCBidWZmZXJfc2l6
ZSk7CisJCQlCVUdfT04oIWJ1ZmZlcik7CisJCX0KKworCQltZGV2ID0gKHN0cnVjdCBlcm9mc19t
YXBfZGV2KSB7CisJCQkubV9kZXZpY2VpZCA9IG1hcC5tX2RldmljZWlkLAorCQkJLm1fcGEgPSBt
YXAubV9wYSwKKwkJfTsKKwkJcmV0ID0gZXJvZnNfbWFwX2Rldigmc2JpLCAmbWRldik7CisJCWlm
IChyZXQpIHsKKwkJCWVyb2ZzX2VycigiZmFpbGVkIHRvIG1hcCBkZXZpY2Ugb2YgbV9wYSAlIiBQ
Ukl1NjQgIiwgbV9kZXZpY2VpZCAldSBAIG5pZCAlbGx1OiAlZCIsCisJCQkJICBtYXAubV9wYSwg
bWFwLm1fZGV2aWNlaWQsIGlub2RlLT5uaWQgfCAwVUxMLCByZXQpOworCQkJZ290byBvdXQ7CisJ
CX0KKworCQlyZXQgPSBkZXZfcmVhZChtZGV2Lm1fZGV2aWNlaWQsIHJhdywgbWRldi5tX3BhLCBt
YXAubV9wbGVuKTsKKwkJaWYgKHJldCA8IDApIHsKKwkJCWVyb2ZzX2VycigiZmFpbGVkIHRvIHJl
YWQgZGF0YSBvZiBtX3BhICUiIFBSSXU2NCAiLCBtX3BsZW4gJSIgUFJJdTY0ICIgQCBuaWQgJWxs
dTogJWQiLAorCQkJCSAgbWRldi5tX3BhLCBtYXAubV9wbGVuLCBpbm9kZS0+bmlkIHwgMFVMTCwg
cmV0KTsKKwkJCWdvdG8gb3V0OworCQl9CisKKwkJaWYgKGNvbXByZXNzZWQpIHsKKwkJCXJldCA9
IHpfZXJvZnNfZGVjb21wcmVzcygmKHN0cnVjdCB6X2Vyb2ZzX2RlY29tcHJlc3NfcmVxKSB7CisJ
CQkJCQkuaW4gPSByYXcsCisJCQkJCQkub3V0ID0gYnVmZmVyLAorCQkJCQkJLmRlY29kZWRza2lw
ID0gMCwKKwkJCQkJCS5pbnB1dHNpemUgPSBtYXAubV9wbGVuLAorCQkJCQkJLmRlY29kZWRsZW5n
dGggPSBtYXAubV9sbGVuLAorCQkJCQkJLmFsZyA9IG1hcC5tX2FsZ29yaXRobWZvcm1hdCwKKwkJ
CQkJCS5wYXJ0aWFsX2RlY29kaW5nID0gMAorCQkJCQkJIH0pOworCisJCQlpZiAocmV0IDwgMCkg
eworCQkJCWVyb2ZzX2VycigiZmFpbGVkIHRvIGRlY29tcHJlc3MgZGF0YSBvZiBtX3BhICUiIFBS
SXU2NCAiLCBtX3BsZW4gJSIgUFJJdTY0ICIgQCBuaWQgJWxsdTogJWQiLAorCQkJCQkgIG1kZXYu
bV9wYSwgbWFwLm1fcGxlbiwgaW5vZGUtPm5pZCB8IDBVTEwsIHJldCk7CisJCQkJZ290byBvdXQ7
CisJCQl9CisJCX0KKworCQlpZiAoZmQgIT0gLTEgJiYgd3JpdGUoZmQsIGNvbXByZXNzZWQgPyBi
dWZmZXIgOiByYXcsIG1hcC5tX2xsZW4pIDwgMCkgeworCQkJcmV0ID0gLUVJTzsKKwkJCWdvdG8g
b3V0OworCQl9CiAJfQogCisJaWYgKGZzY2tjZmcucHJpbnRfY29tcF9yYXRpbykgeworCQlmc2Nr
Y2ZnLmxvZ2ljYWxfYmxvY2tzICs9CisJCQlESVZfUk9VTkRfVVAoaW5vZGUtPmlfc2l6ZSwgRVJP
RlNfQkxLU0laKTsKKwkJZnNja2NmZy5waHlzaWNhbF9ibG9ja3MgKz0KKwkJCURJVl9ST1VORF9V
UChwY2h1bmtfbGVuLCBFUk9GU19CTEtTSVopOworCX0KK291dDoKKwlpZiAocmF3KQorCQlmcmVl
KHJhdyk7CisJaWYgKGJ1ZmZlcikKKwkJZnJlZShidWZmZXIpOwogCWlmIChyZXQgPT0gLUVJTykK
IAkJZXJvZnNfZXJyKCJJL08gZXJyb3Igb2NjdXJyZWQgd2hlbiB2ZXJpZnlpbmcgZGF0YSBjaHVu
ayBvZiBuaWQoJWxsdSkiLAogCQkJICBpbm9kZS0+bmlkIHwgMFVMTCk7Ci0KLQlyZXR1cm4gcmV0
OworCXJldHVybiByZXQgPCAwID8gcmV0IDogMDsKIH0KIAotc3RhdGljIHZvaWQgZXJvZnNfY2hl
Y2tfaW5vZGUoZXJvZnNfbmlkX3QgcG5pZCwgZXJvZnNfbmlkX3QgbmlkKQorc3RhdGljIGludCBl
cm9mc192ZXJpZnlfZGlyKGVyb2ZzX25pZF90IHBuaWQsIGVyb2ZzX25pZF90IG5pZCwgc3RydWN0
IGVyb2ZzX2lub2RlICppbm9kZSwgY2hhciAqcGF0aCkKIHsKIAlpbnQgcmV0OwotCXN0cnVjdCBl
cm9mc19pbm9kZSBpbm9kZTsKIAljaGFyIGJ1ZltFUk9GU19CTEtTSVpdOwotCWVyb2ZzX29mZl90
IG9mZnNldDsKLQotCWVyb2ZzX2RiZygiY2hlY2sgaW5vZGU6IG5pZCglbGx1KSIsIG5pZCB8IDBV
TEwpOwotCi0JaW5vZGUubmlkID0gbmlkOwotCXJldCA9IGVyb2ZzX3JlYWRfaW5vZGVfZnJvbV9k
aXNrKCZpbm9kZSk7Ci0JaWYgKHJldCkgewotCQlpZiAocmV0ID09IC1FSU8pCi0JCQllcm9mc19l
cnIoIkkvTyBlcnJvciBvY2N1cnJlZCB3aGVuIHJlYWRpbmcgbmlkKCVsbHUpIiwKLQkJCQkgIG5p
ZCB8IDBVTEwpOwotCQlnb3RvIG91dDsKLQl9Ci0KLQkvKiB2ZXJpZnkgeGF0dHIgZmllbGQgKi8K
LQlyZXQgPSBlcm9mc192ZXJpZnlfeGF0dHIoJmlub2RlKTsKLQlpZiAocmV0KQotCQlnb3RvIG91
dDsKKwllcm9mc19vZmZfdCBvZmZzZXQgPSAwOwogCiAJLyogdmVyaWZ5IGRhdGEgY2h1bmsgbGF5
b3V0ICovCi0JcmV0ID0gZXJvZnNfdmVyaWZ5X2lub2RlX2RhdGEoJmlub2RlKTsKKwlyZXQgPSBl
cm9mc192ZXJpZnlfaW5vZGVfZGF0YShpbm9kZSwgLTEpOwogCWlmIChyZXQpCiAJCWdvdG8gb3V0
OwogCi0JaWYgKChpbm9kZS5pX21vZGUgJiBTX0lGTVQpICE9IFNfSUZESVIpCi0JCWdvdG8gb3V0
OworCWlmIChwYXRoKSB7CisJCXN0cnVjdCBzdGF0IHNiOwogCi0Jb2Zmc2V0ID0gMDsKLQl3aGls
ZSAob2Zmc2V0IDwgaW5vZGUuaV9zaXplKSB7CisJCWVyb2ZzX2RiZygiY3JlYXRlIGRpcmVjdG9y
eSBvbiBwYXRoOiAlcyIsIHBhdGgpOworCisJCWlmICghbHN0YXQocGF0aCwgJnNiKSkgeworCQkJ
aWYgKCFTX0lTRElSKHNiLnN0X21vZGUpKSB7CisJCQkJZXJvZnNfZXJyKCJwYXRoIGlzIG5vdCBh
IGRpcmVjdG9yeTogJXMiLCBwYXRoKTsKKwkJCQlyZXQgPSAtRUlPOworCQkJCWdvdG8gb3V0Owor
CQkJfQorCQl9IGVsc2UgaWYgKGVycm5vICE9IEVOT0VOVCB8fCBta2RpcihwYXRoLCBTX0lSV1hV
KSA8IDApIHsKKwkJCWVyb2ZzX2VycigiZmFpbGVkIHRvIGNyZWF0ZSBkaXJlY3Rvcnk6ICVzIiwg
cGF0aCk7CisJCQlyZXQgPSAtRUlPOworCQkJZ290byBvdXQ7CisJCX0KKworCQlpZiAoZnNja2Nm
Zy5wcmVzZXJ2ZSkKKwkJCWVyb2ZzX3Jlc3RvcmVfc3RhdChpbm9kZSwgcGF0aCk7CisJfQorCisJ
d2hpbGUgKG9mZnNldCA8IGlub2RlLT5pX3NpemUpIHsKIAkJZXJvZnNfYmxrX3QgYmxvY2sgPSBl
cm9mc19ibGtucihvZmZzZXQpOwogCQllcm9mc19vZmZfdCBtYXhzaXplID0gbWluX3QoZXJvZnNf
b2ZmX3QsCi0JCQkJCWlub2RlLmlfc2l6ZSAtIG9mZnNldCwgRVJPRlNfQkxLU0laKTsKKwkJCQkJ
aW5vZGUtPmlfc2l6ZSAtIG9mZnNldCwgRVJPRlNfQkxLU0laKTsKIAkJc3RydWN0IGVyb2ZzX2Rp
cmVudCAqZGUgPSAodm9pZCAqKWJ1ZjsKIAogCQl1bnNpZ25lZCBpbnQgbmFtZW9mZjsKIAotCQly
ZXQgPSBlcm9mc19wcmVhZCgmaW5vZGUsIGJ1ZiwgbWF4c2l6ZSwgb2Zmc2V0KTsKKwkJcmV0ID0g
ZXJvZnNfcHJlYWQoaW5vZGUsIGJ1ZiwgbWF4c2l6ZSwgb2Zmc2V0KTsKIAkJaWYgKHJldCkgewog
CQkJZXJvZnNfZXJyKCJJL08gZXJyb3Igb2NjdXJyZWQgd2hlbiByZWFkaW5nIGRpcmVudHMgQCBu
aWQgJWxsdSwgYmxvY2sgJXU6ICVkIiwKIAkJCQkgIG5pZCB8IDBVTEwsIGJsb2NrLCByZXQpOwpA
QCAtNTQzLDYgKzY2NywxODIgQEAgc3RhdGljIHZvaWQgZXJvZnNfY2hlY2tfaW5vZGUoZXJvZnNf
bmlkX3QgcG5pZCwgZXJvZnNfbmlkX3QgbmlkKQogCQlvZmZzZXQgKz0gbWF4c2l6ZTsKIAl9CiBv
dXQ6CisJcmV0dXJuIHJldDsKK30KKworc3RhdGljIGludCBlcm9mc192ZXJpZnlfZmlsZShlcm9m
c19uaWRfdCBuaWQsIHN0cnVjdCBlcm9mc19pbm9kZSAqaW5vZGUsIGNoYXIgKnBhdGgpCit7CisJ
aW50IHJldDsKKwlpbnQgZmQgPSAtMTsKKworCWlmIChwYXRoKSB7CisJCXN0cnVjdCBzdGF0IHNi
OworCisJCWVyb2ZzX2RiZygiZXh0cmFjdCBmaWxlIHRvIHBhdGg6ICVzIiwgcGF0aCk7CisKKwkJ
aWYgKCFsc3RhdChwYXRoLCAmc2IpKSB7CisJCQlpZiAoU19JU0RJUihzYi5zdF9tb2RlKSkgewor
CQkJCWVyb2ZzX2VycigicGF0aCBpcyBhIGRpcmVjdG9yeTogJXMiLCBwYXRoKTsKKwkJCQlyZXQg
PSAtRUlPOworCQkJCWdvdG8gb3V0OworCQkJfQorCQkJZXJvZnNfd2Fybigib3ZlcndyaXRpbmc6
ICVzIiwgcGF0aCk7CisJCQlpZiAodW5saW5rKHBhdGgpIDwgMCkgeworCQkJCWVyb2ZzX2Vycigi
ZmFpbGVkIHRvIHJlbW92ZSBmaWxlOiAlcyIsIHBhdGgpOworCQkJCXJldCA9IC1FSU87CisJCQkJ
Z290byBvdXQ7CisJCQl9CisJCX0KKworCQlmZCA9IG9wZW4ocGF0aCwgT19XUk9OTFkgfCBPX0NS
RUFUIHwgT19UUlVOQywgU19JUldYVSk7CisJCWlmIChmZCA8IDApIHsKKwkJCWVyb2ZzX2Vycigi
ZmFpbGVkIHRvIG9wZW4gZmlsZTogJXMiLCBwYXRoKTsKKwkJCXJldCA9IC1FSU87CisJCQlnb3Rv
IG91dDsKKwkJfQorCX0KKworCS8qIHZlcmlmeSBkYXRhIGNodW5rIGxheW91dCAqLworCXJldCA9
IGVyb2ZzX3ZlcmlmeV9pbm9kZV9kYXRhKGlub2RlLCBmZCk7CisKKwlpZiAocGF0aCkgeworCQlp
bnQgZnN5bmNfZmFpbCA9IGZzeW5jKGZkKSAhPSAwOworCQlpbnQgY2xvc2VfZmFpbCA9IGNsb3Nl
KGZkKSAhPSAwOworCisJCWlmIChyZXQpCisJCQlnb3RvIG91dDsKKwkJaWYgKGZzeW5jX2ZhaWwg
fHwgY2xvc2VfZmFpbCkgeworCQkJcmV0ID0gLUVJTzsKKwkJCWdvdG8gb3V0OworCQl9CisKKwkJ
aWYgKGZzY2tjZmcucHJlc2VydmUpCisJCQllcm9mc19yZXN0b3JlX3N0YXQoaW5vZGUsIHBhdGgp
OworCX0KK291dDoKKwlyZXR1cm4gcmV0OworfQorCitzdGF0aWMgaW50IGVyb2ZzX3ZlcmlmeV9z
eW1saW5rKGVyb2ZzX25pZF90IG5pZCwgc3RydWN0IGVyb2ZzX2lub2RlICppbm9kZSwgY2hhciAq
cGF0aCkKK3sKKwlpbnQgcmV0OworCWNoYXIgKmJ1ZiA9IE5VTEw7CisKKwkvKiB2ZXJpZnkgZGF0
YSBjaHVuayBsYXlvdXQgKi8KKwlyZXQgPSBlcm9mc192ZXJpZnlfaW5vZGVfZGF0YShpbm9kZSwg
LTEpOworCWlmIChyZXQpCisJCWdvdG8gb3V0OworCisJaWYgKHBhdGgpIHsKKwkJc3RydWN0IHN0
YXQgc2I7CisKKwkJZXJvZnNfZGJnKCJleHRyYWN0IHN5bWxpbmsgdG8gcGF0aDogJXMiLCBwYXRo
KTsKKworCQlpZiAoIWxzdGF0KHBhdGgsICZzYikpIHsKKwkJCWlmIChTX0lTRElSKHNiLnN0X21v
ZGUpKSB7CisJCQkJZXJvZnNfZXJyKCJwYXRoIGlzIGEgZGlyZWN0b3J5OiAlcyIsIHBhdGgpOwor
CQkJCXJldCA9IC1FSU87CisJCQkJZ290byBvdXQ7CisJCQl9CisJCQllcm9mc193YXJuKCJvdmVy
d3JpdGluZzogJXMiLCBwYXRoKTsKKwkJCWlmICh1bmxpbmsocGF0aCkgPCAwKSB7CisJCQkJZXJv
ZnNfZXJyKCJmYWlsZWQgdG8gcmVtb3ZlIGZpbGU6ICVzIiwgcGF0aCk7CisJCQkJcmV0ID0gLUVJ
TzsKKwkJCQlnb3RvIG91dDsKKwkJCX0KKwkJfQorCisJCWJ1ZiA9IG1hbGxvYyhpbm9kZS0+aV9z
aXplICsgMSk7CisJCWlmICghYnVmKSB7CisJCQlyZXQgPSAtRU5PTUVNOworCQkJZ290byBvdXQ7
CisJCX0KKworCQlyZXQgPSBlcm9mc19wcmVhZChpbm9kZSwgYnVmLCBpbm9kZS0+aV9zaXplLCAw
KTsKKwkJaWYgKHJldCkgeworCQkJZXJvZnNfZXJyKCJJL08gZXJyb3Igb2NjdXJyZWQgd2hlbiBy
ZWFkaW5nIHN5bWxpbmsgQCBuaWQgJWxsdTogJWQiLAorCQkJCSAgbmlkIHwgMFVMTCwgcmV0KTsK
KwkJCWdvdG8gb3V0OworCQl9CisKKwkJYnVmW2lub2RlLT5pX3NpemVdID0gJ1wwJzsKKwkJaWYg
KHN5bWxpbmsoYnVmLCBwYXRoKSA8IDApIHsKKwkJCWVyb2ZzX2VycigiZmFpbGVkIHRvIGNyZWF0
ZSBzeW1saW5rOiAlcyIsIHBhdGgpOworCQkJcmV0ID0gLUVJTzsKKwkJCWdvdG8gb3V0OworCQl9
CisKKwkJaWYgKGZzY2tjZmcucHJlc2VydmUpCisJCQllcm9mc19yZXN0b3JlX3N0YXQoaW5vZGUs
IHBhdGgpOworCX0KK291dDoKKwlpZiAoYnVmKQorCQlmcmVlKGJ1Zik7CisJcmV0dXJuIHJldDsK
K30KKworc3RhdGljIHZvaWQgZXJvZnNfY2hlY2tfaW5vZGUoZXJvZnNfbmlkX3QgcG5pZCwgZXJv
ZnNfbmlkX3QgbmlkKQoreworCWludCByZXQ7CisJc3RydWN0IGVyb2ZzX2lub2RlIGlub2RlOwor
CWNoYXIgKnBhdGggPSBOVUxMOworCisJZXJvZnNfZGJnKCJ2ZXJpZnkgaW5vZGU6IG5pZCglbGx1
KSIsIG5pZCB8IDBVTEwpOworCisJaW5vZGUubmlkID0gbmlkOworCXJldCA9IGVyb2ZzX3JlYWRf
aW5vZGVfZnJvbV9kaXNrKCZpbm9kZSk7CisJaWYgKHJldCkgeworCQlpZiAocmV0ID09IC1FSU8p
CisJCQllcm9mc19lcnIoIkkvTyBlcnJvciBvY2N1cnJlZCB3aGVuIHJlYWRpbmcgbmlkKCVsbHUp
IiwKKwkJCQkgIG5pZCB8IDBVTEwpOworCQlnb3RvIG91dDsKKwl9CisKKwkvKiB2ZXJpZnkgeGF0
dHIgZmllbGQgKi8KKwlyZXQgPSBlcm9mc192ZXJpZnlfeGF0dHIoJmlub2RlKTsKKwlpZiAocmV0
KQorCQlnb3RvIG91dDsKKworCWlmIChmc2NrY2ZnLmV4dHJhY3RfZGlyKSB7CisJCWNoYXIgYnVm
W1BBVEhfTUFYICsgMV0gPSB7MH07CisJCWludCBidWZsZW47CisKKwkJcmV0ID0gZXJvZnNfZ2V0
X3BhdGhuYW1lKHNiaS5yb290X25pZCwgc2JpLnJvb3RfbmlkLAorCQkJCQkgaW5vZGUubmlkLCBi
dWYsIDApOworCQlpZiAocmV0IDwgMCkgeworCQkJZXJvZnNfZXJyKCJmaWxlIHBhdGggbm90IGZv
dW5kIEAgbmlkICVsbHUiLCBpbm9kZS5uaWQgfCAwVUxMKTsKKwkJCWdvdG8gb3V0OworCQl9CisK
KwkJcGF0aCA9IG1hbGxvYyhQQVRIX01BWCArIDEpOworCQlpZiAoIXBhdGgpIHsKKwkJCXJldCA9
IC1FTk9NRU07CisJCQlnb3RvIG91dDsKKwkJfQorCQlidWZsZW4gPSBzdHJsZW4oYnVmKTsKKwkJ
bWVtY3B5KHBhdGgsIGZzY2tjZmcuZXh0cmFjdF9kaXIsIGZzY2tjZmcuZXh0cmFjdF9kaXJfbGVu
KTsKKwkJbWVtY3B5KHBhdGggKyBmc2NrY2ZnLmV4dHJhY3RfZGlyX2xlbiwgYnVmLCBidWZsZW4p
OworCQlwYXRoW2ZzY2tjZmcuZXh0cmFjdF9kaXJfbGVuICsgYnVmbGVuXSA9ICdcMCc7CisJfQor
CisJLyogdmVyaWZ5IGRhdGEgY2h1bmsgbGF5b3V0ICovCisJc3dpdGNoIChpbm9kZS5pX21vZGUg
JiBTX0lGTVQpIHsKKwljYXNlIFNfSUZESVI6CisJCXJldCA9IGVyb2ZzX3ZlcmlmeV9kaXIocG5p
ZCwgbmlkLCAmaW5vZGUsIHBhdGgpOworCQlicmVhazsKKwljYXNlIFNfSUZSRUc6CisJCXJldCA9
IGVyb2ZzX3ZlcmlmeV9maWxlKG5pZCwgJmlub2RlLCBwYXRoKTsKKwkJYnJlYWs7CisJY2FzZSBT
X0lGTE5LOgorCQlyZXQgPSBlcm9mc192ZXJpZnlfc3ltbGluayhuaWQsICZpbm9kZSwgcGF0aCk7
CisJCWJyZWFrOworCWRlZmF1bHQ6CisJCXJldCA9IGVyb2ZzX3ZlcmlmeV9pbm9kZV9kYXRhKCZp
bm9kZSwgLTEpOworCQlicmVhazsKKwl9CitvdXQ6CisJaWYgKHBhdGgpCisJCWZyZWUocGF0aCk7
CiAJaWYgKHJldCAmJiByZXQgIT0gLUVJTykKIAkJZnNja2NmZy5jb3JydXB0ZWQgPSB0cnVlOwog
fQpAQCAtNTU2LDYgKzg1Niw5IEBAIGludCBtYWluKGludCBhcmdjLCBjaGFyICoqYXJndikKIAlm
c2NrY2ZnLmNvcnJ1cHRlZCA9IGZhbHNlOwogCWZzY2tjZmcucHJpbnRfY29tcF9yYXRpbyA9IGZh
bHNlOwogCWZzY2tjZmcuY2hlY2tfZGVjb21wID0gZmFsc2U7CisJZnNja2NmZy5leHRyYWN0X2Rp
ciA9IE5VTEw7CisJZnNja2NmZy5leHRyYWN0X2Rpcl9sZW4gPSAwOworCWZzY2tjZmcucHJlc2Vy
dmUgPSBmYWxzZTsKIAlmc2NrY2ZnLmxvZ2ljYWxfYmxvY2tzID0gMDsKIAlmc2NrY2ZnLnBoeXNp
Y2FsX2Jsb2NrcyA9IDA7CiAKLS0gCjIuMzAuMgoK
--0000000000000cd22505d2ccb981--
