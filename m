Return-Path: <linux-erofs-bounces+lists+linux-erofs=lfdr.de@lists.ozlabs.org>
X-Original-To: lists+linux-erofs@lfdr.de
Delivered-To: lists+linux-erofs@lfdr.de
Received: from lists.ozlabs.org (lists.ozlabs.org [IPv6:2404:9400:2:0:216:3eff:fee1:b9f1])
	by mail.lfdr.de (Postfix) with ESMTPS id BF9C336AFD4
	for <lists+linux-erofs@lfdr.de>; Mon, 26 Apr 2021 10:40:14 +0200 (CEST)
Received: from boromir.ozlabs.org (localhost [IPv6:::1])
	by lists.ozlabs.org (Postfix) with ESMTP id 4FTJHc2h5Jz2yyS
	for <lists+linux-erofs@lfdr.de>; Mon, 26 Apr 2021 18:40:12 +1000 (AEST)
Authentication-Results: lists.ozlabs.org;
	dkim=fail reason="signature verification failed" (1024-bit key; unprotected) header.d=linuxfoundation.org header.i=@linuxfoundation.org header.a=rsa-sha256 header.s=korg header.b=lH5OXRYL;
	dkim-atps=neutral
X-Original-To: linux-erofs@lists.ozlabs.org
Delivered-To: linux-erofs@lists.ozlabs.org
Authentication-Results: lists.ozlabs.org; spf=pass (sender SPF authorized)
 smtp.mailfrom=linuxfoundation.org (client-ip=198.145.29.99;
 helo=mail.kernel.org; envelope-from=gregkh@linuxfoundation.org;
 receiver=<UNKNOWN>)
Authentication-Results: lists.ozlabs.org; dkim=pass (1024-bit key;
 unprotected) header.d=linuxfoundation.org header.i=@linuxfoundation.org
 header.a=rsa-sha256 header.s=korg header.b=lH5OXRYL; 
 dkim-atps=neutral
Received: from mail.kernel.org (mail.kernel.org [198.145.29.99])
 (using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
 (No client certificate requested)
 by lists.ozlabs.org (Postfix) with ESMTPS id 4FTJHC6ZyQz300S
 for <linux-erofs@lists.ozlabs.org>; Mon, 26 Apr 2021 18:39:50 +1000 (AEST)
Received: by mail.kernel.org (Postfix) with ESMTPSA id 62FBE61026;
 Mon, 26 Apr 2021 08:39:46 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=linuxfoundation.org;
 s=korg; t=1619426386;
 bh=qmBzYEu9Br729+JjbL2iaRcxwkLblYZWZBSJZ2/X8/Y=;
 h=Date:From:To:Cc:Subject:References:In-Reply-To:From;
 b=lH5OXRYLfOWxZiREksdAwmEnsT8uPwGz1gPWQxo+539jCrJHkiAvwHr79nBWap9aX
 mizyB0PaixVznKf6/4OzIBR3ioif4mYLagBPE90oNdwlVfOCq7W6Y8u9WDyD35tYju
 kksypEFnXbtXbrgAl00EFoI1M9bzz0rizcMQQbmw=
Date: Mon, 26 Apr 2021 10:39:44 +0200
From: Greg Kroah-Hartman <gregkh@linuxfoundation.org>
To: Gao Xiang <hsiangkao@redhat.com>
Subject: Re: [PATCH for-4.19] erofs: fix extended inode could cross boundary
Message-ID: <YIZ8UOo0c2CLt8pl@kroah.com>
References: <20210426082933.4040996-1-hsiangkao@redhat.com>
MIME-Version: 1.0
Content-Type: text/plain; charset=us-ascii
Content-Disposition: inline
In-Reply-To: <20210426082933.4040996-1-hsiangkao@redhat.com>
X-BeenThere: linux-erofs@lists.ozlabs.org
X-Mailman-Version: 2.1.29
Precedence: list
List-Id: Development of Linux EROFS file system <linux-erofs.lists.ozlabs.org>
List-Unsubscribe: <https://lists.ozlabs.org/options/linux-erofs>,
 <mailto:linux-erofs-request@lists.ozlabs.org?subject=unsubscribe>
List-Archive: <http://lists.ozlabs.org/pipermail/linux-erofs/>
List-Post: <mailto:linux-erofs@lists.ozlabs.org>
List-Help: <mailto:linux-erofs-request@lists.ozlabs.org?subject=help>
List-Subscribe: <https://lists.ozlabs.org/listinfo/linux-erofs>,
 <mailto:linux-erofs-request@lists.ozlabs.org?subject=subscribe>
Cc: linux-erofs@lists.ozlabs.org, stable@vger.kernel.org
Errors-To: linux-erofs-bounces+lists+linux-erofs=lfdr.de@lists.ozlabs.org
Sender: "Linux-erofs"
 <linux-erofs-bounces+lists+linux-erofs=lfdr.de@lists.ozlabs.org>

On Mon, Apr 26, 2021 at 04:29:33PM +0800, Gao Xiang wrote:
> commit 0dcd3c94e02438f4a571690e26f4ee997524102a upstream.
> 
> Each ondisk inode should be aligned with inode slot boundary
> (32-byte alignment) because of nid calculation formula, so all
> compact inodes (32 byte) cannot across page boundary. However,
> extended inode is now 64-byte form, which can across page boundary
> in principle if the location is specified on purpose, although
> it's hard to be generated by mkfs due to the allocation policy
> and rarely used by Android use case now mainly for > 4GiB files.
> 
> For now, only two fields `i_ctime_nsec` and `i_nlink' couldn't
> be read from disk properly and cause out-of-bound memory read
> with random value.
> 
> Let's fix now.
> 
> Fixes: 431339ba9042 ("staging: erofs: add inode operations")
> Cc: <stable@vger.kernel.org> # 4.19+
> Link: https://lore.kernel.org/r/20200729175801.GA23973@xiangao.remote.csb
> Reviewed-by: Chao Yu <yuchao0@huawei.com>
> [ Gao Xiang: resolve non-trivial conflicts for latest 4.19.y. ]
> Signed-off-by: Gao Xiang <hsiangkao@redhat.com>
> ---
>  drivers/staging/erofs/inode.c | 135 ++++++++++++++++++++++------------
>  1 file changed, 90 insertions(+), 45 deletions(-)

Thanks for the backport, I'll queue it up after this latest round of
stable kernels is released later this week.

greg k-h
